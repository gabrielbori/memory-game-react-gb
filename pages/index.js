import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useState, useEffect } from 'react'

export default function Home() {
const elements = ["👺","🤡","💩","👻","👿","👍🏼","⚽️", "🏍"]
//const elements = ["👺"]
 const [gameData, setGameData] = useState([])
 const [flippedCards, setFlippedCards] = useState([])
 const [nowFlipped, setNowFlipped] = useState([])
 const [movements, setMovements] = useState(0)
const [gameOver, setGameOver] = useState(false)

  const initialize = () => {
    const newDataSet = [...elements, ...elements]
    .sort((a, b) => Math.random() - 0.5)
    setGameData(newDataSet)
    setFlippedCards([])
    setNowFlipped([])
    setMovements(0)
  }

  useEffect(() => {
    initialize()
    setGameOver(false)
  }, [])
  
  useEffect(() =>{
    if(flippedCards.length == gameData.length) {
      setGameOver(true)
    } else {
      setGameOver(false)
    }
  },[movements, flippedCards,gameData])

const onCLicked = (i) => {
  if(nowFlipped.includes(i)) {
    return;
  }
  if(nowFlipped.length === 1) {
    if(gameData[i] == gameData[nowFlipped[0]]) {
      setFlippedCards([i,...flippedCards, ...nowFlipped])
      setNowFlipped([])
      setMovements(movements+1)
    } else {
      setNowFlipped([...nowFlipped, i])
      setMovements(movements+1)
    }
  } else {
    setNowFlipped([i])
    setMovements(movements+1)
  }
}

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Memory Game 
        </h1>
        <div>Total movements: {movements}</div>
        <br />
        <br />
        <div className='game'>
        {gameData.map((data, i) => {
          return <>
           <div className={flippedCards.includes(i) || nowFlipped.includes(i) ? 'cardClicked' : 'card'} onClick={()=>onCLicked(i)}>
           <div key={i} displayed={false} className={flippedCards.includes(i) || nowFlipped.includes(i) ? 'cardContentClicked' : 'cardContent'}>
           {
            flippedCards.includes(i) || nowFlipped.includes(i) ? data : '**'
           }
           </div>
           </div>
          </>
        })}
        </div>
        <div className={gameOver ? 'won' :'playing'}>
        {gameOver ? "Game over":"Keep playing"}
        </div>
        <button className="reset" onClick={initialize}>
        <div>Reset</div>
        </button>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
